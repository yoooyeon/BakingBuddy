buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.coco'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

    // mariadb
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
//    runtimeOnly 'com.h2database:h2'
    // google sql
//    implementation platform('com.google.cloud:spring-cloud-gcp-dependencies:4.1.4')
//    implementation 'com.google.cloud:spring-cloud-gcp-starter-sql-mysql'


    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // socket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.webjars:stomp-websocket:2.3.4'
    implementation 'org.testng:testng:7.1.0'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // jakarta.servlet-api 추가
    compileOnly 'jakarta.servlet:jakarta.servlet-api:6.0.0'


    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //querydsl 설정 추가
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // 쿼리파라미터 로그 남기기
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.8'

    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'

    testCompileOnly 'org.projectlombok:lombok' // 테스트 의존성 추가
    testAnnotationProcessor 'org.projectlombok:lombok' // 테스트 의존성 추가
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    // 구글 이미지 스토리지
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-gcp-starter', version: '1.2.5.RELEASE'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-gcp-storage', version: '1.2.5.RELEASE'

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-cache'

    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    // Spring Batch
    implementation 'org.springframework.boot:spring-boot-starter-batch'


    // jwt
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    // https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api
    implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'

    // https://mvnrepository.com/artifact/com.sun.xml.bind/jaxb-core
    implementation group: 'com.sun.xml.bind', name: 'jaxb-core', version: '2.3.0.1'

    // https://mvnrepository.com/artifact/com.sun.xml.bind/jaxb-impl
    implementation group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '2.3.1'

}
//dependencyManagement {
//    imports {
//        mavenBom 'com.google.cloud:spring-cloud-gcp-dependencies:4.1.4'
//    }
//}

tasks.named('test') {
    useJUnitPlatform()
}

def generated = "generated/querydsl"

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(generated)
}

sourceSets {
    main {
        java {
            srcDirs += [generated]
        }
    }
}

clean {
    delete file(generated)
}
